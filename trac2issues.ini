[github]
# The owner of the repository, default user for tickets, etc.
owner = YourNameHere

[Trac]
# The source Trac database.
# The default is an SQLite database "trac.db" in the current directory
# See DBI->connect for possible formats
source = dbi:SQLite:dbname=trac.db
# Username & password to access the database, if needed
username =
password =

# The Timezone for dates appearing in the Trac database;
# they'll be converted to GMT.
# Here, use Central European (Jacobs U, Bremen Germany)
timezone = GMT
# The encoding of strings in the Trac database
encoding = UTF-8

[Milestones]
# Starting number for newly converted milestones
# [in case there already are milestones in the Issues DB]
start = 1

[Issues]
# Starting number for newly converted issues
# [in case there already are issues in the Issues DB]
start = 1

[Users]
# Mapping of Trac usernames to Gitub usernames
# [names without a new username actually end up mapped to github.owner!]
yourtracname  = yourgithubname
tracusera     = githubusera
tracuserb     = githubuser
unknownusera  = 
unknownuserb  = 

[Label]
# The various keyword-like fields in Trac Tickets whose contents
# will be turned into Issue labels.
field = type, component, priority, resolution, severity, version, keywords
# For each field above, if fieldname.split is true, the content of that
# field will be split into separate words at comma and space
# (like a list of keywords)
keywords.split = true

[LabelMap]
# This maps various words found in the above Issue fields to Labels.
# Supposing the original Trac database has a field called "component".
# You can arrange to have all Tickets involving the component "doc"
# to be converted into Issues with the Label "documentation" by specifying:
#   component.doc = documentation
# You could have Tickets involving component "general" to convert into
# an Issue, but with no extra label by specifying:
#   component.general =

# These mappings might work for you? [Otherwise, remove or modify them.]
# This combines values from priority and severity fields into the small set:
# ==> blocker, critical, major, [nothing], minor
severity.blocker = critical
priority.highest = critical
priority.high = major
priority.normal = 
severity.normal =
priority.low = minor
priority.lowest = minor
severity.trivial = minor
# This remaps Trac's terms to github's conventions
#  bug,enhancement,question
type.defect = bug
type.discussion = question
type.news = question
type.task =
